//   Copyright 2012,2013 Vaughn Vernon
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//       http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.

ext {
    slf4jVersion = '1.7.21'
}

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
}

allprojects {
	repositories {
		maven { url 'http://repo.spring.io/libs-snapshot' }
		mavenCentral()

		flatDir {
			dirs 'lib'
		}
	}
	apply plugin: 'maven'
	apply plugin: 'java'
	apply plugin : 'eclipse'
}

dependencies {
	compile("com.gemstone.gemfire:gemfire:8.2.1")
	// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
	compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.6.1'
}

subprojects {
	repositories {
	    mavenCentral()
	    maven { url "https://repo.spring.io/libs-snapshot" }
	    maven { url "https://repo.spring.io/plugins-release"}
		flatDir {
			dirs 'lib'
		}
	}

	dependencies {
		compile fileTree(dir: 'lib', include: '*.jar')
		runtime fileTree(dir: 'lib', include: '*.jar')
	}
}

project(':iddd_nanotrader') {
    dependencies {
        compile project(':iddd_tradercommon')
		compile("com.gemstone.gemfire:gemfire:8.2.1")
        testCompile "org.slf4j:slf4j-api:$slf4jVersion"
        testCompile "org.slf4j:slf4j-log4j12:$slf4jVersion"
		compile fileTree(dir: 'lib', include: '*.jar')
		runtime fileTree(dir: 'lib', include: '*.jar')
    }
}

project(':iddd_algotrader') {
    dependencies {
        compile project(':iddd_tradercommon')
    }
}

project(':iddd_nanoreports') {
    dependencies {
        compile project(':iddd_tradercommon')
    }
}

task getDeps(type: Copy) {
	  from sourceSets.main.runtimeClasspath
	  into 'lib/'
}
